version: "3"
services:
    web:
        container_name: web
        build: .
        restart: always
        env_file:
            - .env
        ports:
            - 5000:80
        volumes:
            - .:/holidayplanner
        networks:
            - pgnet
        depends_on:
            - db
    db:
        container_name: db
        image: postgres
        restart: always
        ports:
            - 5432:5432
        env_file:
            - .env
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./schema.sql:/docker-entrypont-initdb.d/create_tables.sql
        networks:
            - pgnet

    cadvisor:
        container_name: advisor
        image: gcr.io/cadvisor/cadvisor:latest
        restart: unless-stopped
        ports:
            - 8080:8080
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        networks:
            - pgnet
    prometheus:
        container_name: prometheus
        image: prom/prometheus:latest
        restart: unless-stopped
        ports:
            - 9090:9090
        command:
            - --config.file=/etc/prometheus/prometheus.yml
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
        depends_on:
            - cadvisor
        networks:
            - pgnet
    grafana:
        container_name: grafana
        image: grafana/grafana:latest
        restart: unless-stopped
        ports:
            - 3000:3000
        volumes:
            - grafana_storage:/var/lib/grafana
        depends_on:
            - prometheus
        networks:
            - pgnet

networks:
    pgnet:
        driver: bridge

volumes:
    postgres-data:
    grafana_storage:
